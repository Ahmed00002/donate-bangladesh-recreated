const glslifyBundle = require('glslify-bundle');
const glslifyDeps = require('glslify-deps/sync');
const resolveGLSL = require('./resolve-glsl');
const fs = require('fs');
const path = require('path');

module.exports = function (glslFile, opts = {}) {
  const cwd = opts.cwd || process.cwd();
  const inline = opts.inline;

  const depper = glslifyDeps({
    readFileSync: typeof inline === 'string' ? readFileInline : undefined,
    cwd,
    resolve: resolveGLSL.sync
  });

  const dependencies = [];
  depper.on('file', file => {
    if (!dependencies.includes(file)) dependencies.push(file);
  });

  const deps = depper.add(glslFile);
  const code = glslifyBundle(deps);
  return {
    dependencies,
    code
  };

  function readFileInline (file) {
    if (path.resolve(file) === glslFile) return inline;
    return fs.readFileSync(file, 'utf-8');
  }
};
