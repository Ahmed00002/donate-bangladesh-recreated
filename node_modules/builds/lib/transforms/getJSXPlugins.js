const SimpleError = require('../util/SimpleError');

// By default, JSX is tailored to React
const defaultPragma = 'React.createElement';

module.exports = function (opts = {}) {
  let pragma = defaultPragma;
  if (typeof opts.jsx === 'string') {
    if (!opts.jsx) throw new SimpleError('No JSX pragma specified; should be a non-empty string, boolean, or null/undefined.');
    // User specifies a specific pragma
    pragma = opts.jsx;
  } else if (typeof opts.jsx === 'boolean') {
    // Use default or disable JSX entirely
    pragma = opts.jsx ? defaultPragma : false;
  }

  // TODO: It would be nice for users if there was a plugin that detected
  // when 'vue' and other modules are required() but --jsx is not set properly, i.e. in case
  // no package.json exists.
  let jsxPlugins = [];
  if (pragma === 'vue') {
    // Vue handles JSX differently than React

    console.warn(`
Note that Vue's JSX transform is not yet supported.

Please see this issue for details and discussion:
https://github.com/vuejs/babel-plugin-transform-vue-jsx/issues/127
    `.trim());

    // Use "h" pragma for now, since it sorta works with Vue
    pragma = 'h';

    // TODO: Support Vue, either by patching upstream module or forking it.
    // jsxPlugins = [ require.resolve('babel-plugin-transform-vue-jsx') ];
  }

  if (pragma) {
    jsxPlugins = [
      [ require.resolve('@babel/plugin-transform-react-jsx'), { pragma } ],
      require.resolve('@babel/plugin-syntax-jsx')
    ];
  }

  return jsxPlugins;
};
