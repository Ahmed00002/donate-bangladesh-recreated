const path = require('path');
const ensureRequire = require('../../util/ensureRequire');

module.exports = function (body, file, opts = {}) {
  return ensureRequire('less', 'LESS', opts)
    .then(lessPath => {
      const less = require(lessPath);

      // provide import path
      const paths = [ path.dirname(file), opts.cwd ];
      const lessOpts = {
        paths,
        compress: opts.minify,
        filename: path.basename(file)
      };
      if (less.environment && Array.isArray(less.environment.fileManagers)) {
        // Oddly necessary in ^3.0.1, I'm sure LESS will fix this bug at some point.
        less.environment.fileManagers.forEach(env => {
          if (env.contents && typeof env.contents === 'object') {
            env.contents = {};
          }
        });
      }
      return less.render(body, lessOpts);
    })
    .then(result => {
      if (typeof result === 'object') {
        result.imports.forEach(dep => {
          dep = path.isAbsolute(dep) ? dep : path.resolve(path.dirname(file), dep);
          opts.bundler.emit('file', dep);
        });
        result = result.css;
      }
      return result;
    });
};
