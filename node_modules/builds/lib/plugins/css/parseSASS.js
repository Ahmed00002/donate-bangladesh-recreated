const path = require('path');
const ensureRequire = require('../../util/ensureRequire');

module.exports = function (body, file, opts = {}) {
  return ensureRequire('node-sass', 'SASS', opts)
    .then(sassPath => {
      return new Promise((resolve, reject) => {
        const sass = require(sassPath);

        // provide import path
        const paths = [ path.dirname(file), opts.cwd ];

        const sassOpts = {
          outputStyle: opts.minify ? 'compressed' : undefined,
          includePaths: paths,
          sourceComments: true,
          data: body,
          file: file
        };

        return sass.render(sassOpts, function (err, res) {
          if (err) {
            reject(err);
          } else {
            res.stats.includedFiles.forEach(dep => {
              if (dep !== file) opts.bundler.emit('file', dep);
            });
            resolve(res.css.toString());
          }
        });
      });
    })
    .then(result => {
      if (typeof result === 'object') {
        result.imports.forEach(dep => {
          dep = path.isAbsolute(dep) ? dep : path.resolve(path.dirname(file), dep);
          opts.bundler.emit('file', dep);
        });
        result = result.css;
      }
      return result;
    });
};
